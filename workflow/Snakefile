__author__ = "Kristina Song"
__email__ = "kristina.song@usherbrooke.ca"


import os
import glob
import pandas as pd


##### store paths and user-specific variables #####
configfile: "config/config.yaml"


#### load snoRNA and RBP list ####
sno_list = pd.read_table(config["path"]["snoRNA_list"]).gene_id.values.tolist()
rbp_list = pd.read_table(config["path"]["RBP_list"]).gene_name.values.tolist()


#############################
## Load rules
#############################

include: "rules/filter.smk"
include: "rules/interactions.smk"
#include: "rules/binding.smk"
#include: "rules/string.smk"
#include: "rules/overlaps.smk"


#############################
## Target rules
#############################

rule all:
    input:
        # Generate snoRNA and RBP interactions
        RBP_interactions = expand("results/interactions/ENCODE/{rbp}.bed", rbp=rbp_list),
        sno_interactions = expand("results/interactions/snoGloBe/{sno}.bed", sno=sno_list),
        sno_RBP_target_overlap = expand("results/interactions/sno_RBP_target_overlap/{sno}_RBP.tsv",sno=sno_list),
        #interactions = {
        #    os.path.join(config["outpath"],"rbp_bind_to_sno_transcript.tsv"),
        #    os.path.join(config["outpath"],"sno_bind_to_rbp_transcript.tsv"),
        #    os.path.join(config["outpath"],"significant_sno_rbp_target_overlaps.tsv"),
        #    os.path.join(config["outpath"],"STRING_900_physical_binding.tsv")
        #}